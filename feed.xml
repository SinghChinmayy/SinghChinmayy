<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://chinmaysingh.me/#%20the%20base%20hostname%20&%20protocol%20for%20your%20site/feed.xml" rel="self" type="application/atom+xml"/><link href="https://chinmaysingh.me/#%20the%20base%20hostname%20&%20protocol%20for%20your%20site/" rel="alternate" type="text/html"/><updated>2025-02-23T11:26:47+00:00</updated><id>https://chinmaysingh.me/#%20the%20base%20hostname%20&amp;%20protocol%20for%20your%20site/feed.xml</id><title type="html">Chinmay Singh</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Docker Introduction Guide</title><link href="https://chinmaysingh.me/#%20the%20base%20hostname%20&%20protocol%20for%20your%20site/blog/2025/Docker-Introduction-Guide/" rel="alternate" type="text/html" title="Docker Introduction Guide"/><published>2025-02-23T00:00:00+00:00</published><updated>2025-02-23T00:00:00+00:00</updated><id>https://chinmaysingh.me/#%20the%20base%20hostname%20&amp;%20protocol%20for%20your%20site/blog/2025/Docker-Introduction-Guide</id><content type="html" xml:base="https://chinmaysingh.me/#%20the%20base%20hostname%20&amp;%20protocol%20for%20your%20site/blog/2025/Docker-Introduction-Guide/"><![CDATA[<h1 id="devops-with-docker">DevOps with Docker</h1> <h2 id="tldr">TLDR</h2> <p>This blog covers essential Docker concepts, including networks, volumes, and Docker Compose. Learn how to manage containers efficiently using practical examples and commands.</p> <hr/> <h2 id="docker-networks">Docker Networks</h2> <p>Docker networks allow containers to communicate with each other. The main types include:</p> <ol> <li><strong>Bridge (Default)</strong>: Provides internal networking for containers.</li> <li><strong>Host</strong>: Removes network isolation and uses the host’s network directly.</li> <li><strong>Macvlan</strong>: Assigns a MAC address to each container, making them appear as physical devices on the network.</li> </ol> <h2 id="docker-compose-file">Docker Compose File</h2> <p>Docker Compose allows you to define and run multi-container Docker applications with a simple YAML configuration file. It helps in managing multiple services, setting up networks, mounting volumes, and defining restart policies.</p> <h3 id="structure-of-a-docker-compose-file">Structure of a Docker Compose File</h3> <p>A typical Docker Compose file consists of:</p> <ul> <li><strong>Version</strong>: Specifies the Compose file format version.</li> <li><strong>Services</strong>: Defines the containers that will be created.</li> <li><strong>Volumes</strong>: Manages persistent storage.</li> <li><strong>Networks</strong>: Configures container communication.</li> <li><strong>Environment Variables</strong>: Passes configuration settings.</li> <li><strong>Restart Policy</strong>: Defines how containers restart on failure.</li> </ul> <h3 id="example-docker-compose-file">Example Docker Compose File</h3> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">3.9'</span>
<span class="na">services</span><span class="pi">:</span>
  <span class="na">kavita</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">jvmilazz0/kavita:latest</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">./manga:/manga</span>
      <span class="pi">-</span> <span class="s">./data:/kavita/config</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s2">"</span><span class="s">5000:5000"</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">unless-stopped</span>
</code></pre></div></div> <h3 id="mount-storage-in-docker-compose">Mount Storage in Docker Compose</h3> <p>To persist data across container restarts, mount directories as volumes:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">volumes</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">./from/where:/to/where</span>
</code></pre></div></div> <h2 id="docker-cheatsheet">Docker Cheatsheet</h2> <p>| Command | Description | |————————–|——————————————| | <code class="language-plaintext highlighter-rouge">sudo docker ps -a</code> | List all containers | | <code class="language-plaintext highlighter-rouge">sudo docker start</code> | Start a stopped container | | <code class="language-plaintext highlighter-rouge">docker images</code> | List all images | | <code class="language-plaintext highlighter-rouge">docker system prune -a --volumes</code> | Remove all unused containers, networks, images, and volumes | | <code class="language-plaintext highlighter-rouge">sudo systemctl restart docker</code> | Restart Docker service |</p> <h2 id="docker-volume-management">Docker Volume Management</h2> <h3 id="creating-a-docker-volume">Creating a Docker Volume</h3> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker volume create <span class="se">\ </span> 
  <span class="nt">--driver</span> <span class="nb">local</span> <span class="se">\ </span> 
  <span class="nt">--opt</span> <span class="nb">type</span><span class="o">=</span>none <span class="se">\ </span> 
  <span class="nt">--opt</span> <span class="nv">device</span><span class="o">=</span>/path/to/sdc <span class="se">\ </span> 
  <span class="nt">--opt</span> <span class="nv">o</span><span class="o">=</span><span class="nb">bind</span> <span class="se">\ </span> 
  myvolume
</code></pre></div></div> <h3 id="listing-and-inspecting-volumes">Listing and Inspecting Volumes</h3> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker volume <span class="nb">ls
</span>docker volume inspect myvolume
</code></pre></div></div> <h3 id="using-a-volume-in-a-container">Using a Volume in a Container</h3> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-it</span> <span class="nt">--rm</span> <span class="nt">-v</span> myvolume:/data alpine sh
</code></pre></div></div> <h2 id="using-docker-volumes-in-docker-compose">Using Docker Volumes in Docker Compose</h2> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">3'</span>
<span class="na">services</span><span class="pi">:</span>
  <span class="na">app</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">myapp</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">myvolume:/data</span>
<span class="na">volumes</span><span class="pi">:</span>
  <span class="na">myvolume</span><span class="pi">:</span>
    <span class="na">driver</span><span class="pi">:</span> <span class="s">local</span>
    <span class="na">driver_opts</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">none</span>
      <span class="na">device</span><span class="pi">:</span> <span class="s">/path/to/sdc</span>
      <span class="na">o</span><span class="pi">:</span> <span class="s">bind</span>
</code></pre></div></div> <h2 id="exposing-a-port-in-docker">Exposing a Port in Docker</h2> <p>Example configuration:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">services</span><span class="pi">:</span>
  <span class="na">kavita</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">jvmilazz0/kavita:latest</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">./manga:/manga</span>
      <span class="pi">-</span> <span class="s">./data:/kavita/config</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s2">"</span><span class="s">5000:5000"</span>
</code></pre></div></div> <h2 id="conclusion">Conclusion</h2> <p>This blog provides a comprehensive guide to using Docker for DevOps. You’ve learned about networking, volume management, and Compose files to efficiently manage your containers. Master these concepts, and you’ll be on your way to becoming a Docker pro!</p>]]></content><author><name></name></author><category term="docker"/><category term="docker"/><summary type="html"><![CDATA[This blog covers essential Docker concepts, including networks, volumes, and Docker Compose. Learn how to manage containers efficiently using practical examples and commands.]]></summary></entry><entry><title type="html">a guide to jekyll al-folio</title><link href="https://chinmaysingh.me/#%20the%20base%20hostname%20&%20protocol%20for%20your%20site/blog/2024/Jekyll-guide/" rel="alternate" type="text/html" title="a guide to jekyll al-folio"/><published>2024-12-30T15:59:00+00:00</published><updated>2024-12-30T15:59:00+00:00</updated><id>https://chinmaysingh.me/#%20the%20base%20hostname%20&amp;%20protocol%20for%20your%20site/blog/2024/Jekyll-guide</id><content type="html" xml:base="https://chinmaysingh.me/#%20the%20base%20hostname%20&amp;%20protocol%20for%20your%20site/blog/2024/Jekyll-guide/"><![CDATA[<p>In this guide, we will walk through the steps to add DISQUS comments to your Jekyll site using the al-folio theme.</p> <h2 id="step-1-sign-up-for-disqus">Step 1: Sign Up for DISQUS</h2> <p>First, you need to create an account on <a href="https://disqus.com/">DISQUS</a>. Once you have signed up, you will need to register your website.</p> <h2 id="step-2-configure-disqus-in-jekyll">Step 2: Configure DISQUS in Jekyll</h2> <p>After registering your website, you will receive a shortname from DISQUS. This shortname is used to identify your website in the DISQUS system.</p> <p>Open your <code class="language-plaintext highlighter-rouge">_config.yml</code> file and add the following configuration:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">disqus</span><span class="pi">:</span>
  <span class="na">shortname</span><span class="pi">:</span> <span class="s">your-disqus-shortname</span>
</code></pre></div></div> <p>Replace <code class="language-plaintext highlighter-rouge">your-disqus-shortname</code> with the shortname provided by DISQUS.</p> <h2 id="step-3-enable-disqus-comments-in-your-posts">Step 3: Enable DISQUS Comments in Your Posts</h2> <p>To enable DISQUS comments for a specific post, add the following front matter to your post’s markdown file:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">disqus_comments</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div> <p>This will enable DISQUS comments for that post.</p> <h2 id="step-4-customize-the-comments-section">Step 4: Customize the Comments Section</h2> <p>You can customize the appearance and behavior of the comments section by modifying the DISQUS embed code in your theme’s layout files. Refer to the <a href="https://help.disqus.com/">DISQUS documentation</a> for more details.</p> <p>By following these steps, you can easily integrate DISQUS comments into your Jekyll site using the al-folio theme.</p> <hr/>]]></content><author><name></name></author><category term="guides"/><category term="tutorials"/><category term="comments"/><summary type="html"><![CDATA[An example of a blog post with Disqus comments in Jekyll using the al-folio theme]]></summary></entry></feed>